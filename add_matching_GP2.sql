
CREATE TABLE SECOND_A AS SELECT ID,NUM, CURRENT_LINE1, CURRENT_LINE2,CURRENT_LINE3,
CURRENT_POSTCODE,H3_4_P,H3_5_P,H3_6_P,H3_7_P,H3_8_P, H3_9_P,H3_10_P,
ADDRESS_STRING,ADDRESS_STRING_NOPC,NEIGHBOURS,NEAR_NEIGHBOURS,FAR_NEIGHBOURS,VFAR_NEIGHBOURS,
replace(ADDRESS_STRING,' ','') as ADD_NO_SPACE,
regexp_substr(ADDRESS_STRING_nopc,'(LEVEL|LVL|FLOOR|FLR|UNIT|ROOM|RM|FLAT|FLT|APT|APPARTMENT|SUITE)+.*[[:digit:]]|[[:digit:]].*[[:digit:]][[:alpha:]]*|[[:digit:]]+') AS ADD_NUM
FROM CHI_ADD_hist;

ALTER TABLE SECOND_A ADD STAGE varchar(250);
------------------
--random selection
---------------------
--CREATE TABLE RANDOM AS SELECT * FROM SECOND_A SAMPLE(1); --1% sample

UPDATE SECOND_A SET num = replace(SECOND_A.num,'-', '/');

--INCOMING DATA CLEANING
alter table "MARTIR03"."SECOND_A" parallel 12;
commit;

UPDATE second_a SET NUM = trim(leading FROM SECOND_A.num);


UPDATE SECOND_A SET CURRENT_LINE1 = regexp_replace(SECOND_A.CURRENT_LINE1,'ROOM|FLAT|RM|FLT|FT|SUITE|BLOCK|C/O', '');
UPDATE SECOND_A SET ADDRESS_STRING_nopc = regexp_replace(SECOND_A.ADDRESS_STRING_NOpC,'ROOM|FLAT|RM|FLT|FT|SUITE|BLOCK|C/O', '');
UPDATE SECOND_A SET CURRENT_LINE1 = regexp_replace(SECOND_A.CURRENT_LINE1,' CRT| CT', ' COURT');
UPDATE SECOND_A SET ADDRESS_STRING_nopc = regexp_replace(SECOND_A.ADDRESS_STRING_NOpC,' CRT| CT', ' COURT');

UPDATE SECOND_A SET CURRENT_LINE1 = regexp_replace(SECOND_A.CURRENT_LINE1,' TCE | TERR | TER ', ' TERRACE');
UPDATE SECOND_A SET ADDRESS_STRING_nopc = regexp_replace(SECOND_A.ADDRESS_STRING_NOpC,' TCE | TERR | TER ', ' TERRACE ');

UPDATE SECOND_A SET CURRENT_LINE1 = regexp_replace(SECOND_A.CURRENT_LINE1,' GDNS ', ' GARDENS ');
UPDATE SECOND_A SET ADDRESS_STRING_nopc = regexp_replace(SECOND_A.ADDRESS_STRING_NOpC,'GDNS', 'GARDENS');

UPDATE SECOND_A SET CURRENT_LINE1 = regexp_replace(SECOND_A.CURRENT_LINE1,'HSE', 'HOUSE');
UPDATE SECOND_A SET ADDRESS_STRING_nopc = regexp_replace(SECOND_A.ADDRESS_STRING_NOpC,'HSE', 'HOUSE');

UPDATE second_a SET ADD_NUM = regexp_substr(second_a.ADDRESS_STRING_NOPC,'(LEVEL|LVL|FLOOR|FLR|UNIT|ROOM|RM|FLAT|FLT|APT|APPARTMENT|SUITE)+.*[[:digit:]]|[[:digit:]].*[[:digit:]][[:alpha:]]*|[[:digit:]]+');

UPDATE second_a SET ADD_NUM = replace(SECOND_A.add_num, '^[[:space:]]', '') ;
--UPDATE second_a SET ADD_NUM = trim(leading FROM SECOND_A.add_num);
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'-', '/');

UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,',', ' ');
UPDATE SECOND_A SET add_num = regexp_replace(SECOND_A.add_num, '[[:space:]]{2,}', ' ') ;

UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'[:space:]//[:space:]', '/');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'//', '/');

UPDATE SECOND_A SET ADDRESS_STRING_NOPC = replace(SECOND_A.ADDRESS_STRING_NOPC,',', ' ');
UPDATE SECOND_A SET CURRENT_LINE1 = replace(SECOND_A.CURRENT_LINE1 ,',', ' ');
UPDATE SECOND_A SET CURRENT_LINE2 = replace(SECOND_A.CURRENT_LINE2,',', ' ');
UPDATE SECOND_A SET CURRENT_LINE3 = replace(SECOND_A.CURRENT_LINE3,',', ' ');

UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,',', ' ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'[:space:]/[:space:]', '/');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'/[:space:]', '/');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'[:space:]/', '/');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'0[:space:]/[:space:]R', '0/2 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'1[:space:]/[:space:]R', '1/2 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'2[:space:]/[:space:]R', '2/2 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'3[:space:]/[:space:]R', '3/2 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'4[:space:]/[:space:]R', '4/2 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'1[:space:]/[:space:]L', '1/1 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'2[:space:]/[:space:]L', '2/1 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'3[:space:]/[:space:]L', '3/1 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'4[:space:]/[:space:]L', '4/1 ');

UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'0/R ', '0/2 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'1/R ', '1/2 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'2/R ', '2/2 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'3/R ', '3/2 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'4/R ', '4/2 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'1/L ', '1/1 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'2/L ', '2/1 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'3/L ', '3/1 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'4/L ', '4/1 ');

UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'0[:space:]/[:space:]2 ', '0/2 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'0[:space:]/[:space:]1 ', '0/1 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'1[:space:]/[:space:]2 ', '1/2 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'1[:space:]/[:space:]1 ', '1/1 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'2[:space:]/[:space:]2 ', '2/2 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'2[:space:]/[:space:]1 ', '2/1 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'3[:space:]/[:space:]2 ', '3/2 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'3[:space:]/[:space:]1 ', '3/1 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'4[:space:]/[:space:]2 ', '4/2 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'4[:space:]/[:space:]1 ', '4/1 ');

UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'0 2 ', '0/2 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'0 1 ', '0/1 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'1 2 ', '1/2 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'1 1 ', '1/1 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'2 2 ', '2/2 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'2 1 ', '2/1 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'3 2 ', '3/2 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'3 1 ', '3/1 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'4 2 ', '4/2 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'4 1 ', '4/1 ');

UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'0F2 ', '0/2 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'0F1 ', '0/1 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'1F2 ', '1/2 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'1F1 ', '1/1 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'2F2 ', '2/2 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'2F1 ', '2/1 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'3F2 ', '3/2 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'3F1 ', '3/1 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'4F2 ', '4/2 '); 
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'4F1 ', '4/1 ');
UPDATE SECOND_A SET add_num = replace(SECOND_A.add_num,'G/', '0/');


UPDATE SECOND_A SET add_num = regexp_replace(SECOND_A.add_num,'[A-Z]+?', ' '); -- NEED TO ALTRER TO ONLY REMOVE ALPHA STRINGS OF LEN 2 + ISSUE TO SOLVE YET

--NEW LINE TO TEST TO GET ALPHA NUMBERS ONLY
--[0-9](A-Z?){1}$
--NEW REGEX LINE FOR ROOM NUMBER ONLY
--[ROOM|RM][:space:][0-9](A-Z?){1}$
--NEW REGEX LINE FOR FLAT NUMEBR
--[FLAT|FLT|F][:space:][0-9](A-Z?){1}$
--NEW REGEX LINE FOR FLOOR OR LEVEL OR UNIT NUMEBRS
--[UNIT|FLR|FLOOR|LEVEL|LVL][:space:][0-9](A-Z?){1}$

ALTER TABLE SECOND_A
ADD BUILD_NO varchar(250);
ALTER TABLE SECOND_A
ADD SUB_UNIT varchar(250);
UPDATE SECOND_A SET SUB_UNIT =regexp_substr(add_num, '[^ ]+', 1, 1);
UPDATE SECOND_A SET BUILD_NO =regexp_substr(add_num, '[^ ]+', 1, 2);

--------------------------------------------------------------------
ALTER TABLE SECOND_A ADD WORD_ONE varchar(250);
ALTER TABLE SECOND_A ADD WORD_TWO varchar(250);
ALTER TABLE SECOND_A ADD WORD_THREE varchar(250);
ALTER TABLE SECOND_A ADD WORD_FOUR varchar(250);
ALTER TABLE SECOND_A ADD WORD_FIVE varchar(250);
ALTER TABLE SECOND_A ADD WORD_SIX varchar(250);
ALTER TABLE SECOND_A ADD WORD_SEVEN varchar(250);
ALTER TABLE SECOND_A ADD WORD_EIGHT varchar(250);

UPDATE SECOND_A SET WORD_ONE= REGEXP_SUBSTR(SECOND_A.ADDRESS_STRING,'\w+[A-Z]',1,1);
UPDATE SECOND_A SET WORD_TWO = REGEXP_SUBSTR(SECOND_A.ADDRESS_STRING,'\w+[A-Z]',1,2) ;
UPDATE SECOND_A SET WORD_THREE = REGEXP_SUBSTR(SECOND_A.ADDRESS_STRING,'\w+[A-Z]',1,3) ;
UPDATE SECOND_A SET WORD_FOUR = REGEXP_SUBSTR(SECOND_A.ADDRESS_STRING,'\w+[A-Z]',1,4) ;
UPDATE SECOND_A SET WORD_FIVE = REGEXP_SUBSTR(SECOND_A.ADDRESS_STRING,'\w+[A-Z]',1,5);
UPDATE SECOND_A SET  WORD_SIX =REGEXP_SUBSTR(SECOND_A.ADDRESS_STRING,'\w+[A-Z]',1,6)  ;
UPDATE SECOND_A SET WORD_SEVEN =REGEXP_SUBSTR(SECOND_A.ADDRESS_STRING,'\w+[A-Z]',1,7);
UPDATE SECOND_A SET WORD_EIGHT=REGEXP_SUBSTR(SECOND_A.ADDRESS_STRING,'\w+[A-Z]',1,8)  ;
---
create table results as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  ad_base.post_town,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) 
 - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))/length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2) as score1
FROM SECOND_A,AD_BASE
 WHERE SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2=AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2 
 AND AD_BASE.H3_6=SECOND_A.H3_6_p;
 
UPDATE RESULTS SET STAGE= '1';

CREATE TABLE RESULTSA AS SELECT DISTINCT ID, STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,post_town,SCORE1 FROM(
SELECT ID, STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,post_town,SCORE1,
       MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE
         FROM RESULTS)
   WHERE SCORE1=MAX_SCORE
 ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
 
ALTER TABLE RESULTSA COMPRESS;
 
--
DELETE FROM SECOND_A
WHERE EXISTS( SELECT 1 FROM RESULTSA Where SECOND_A.ID = RESULTSA.ID);
commit;
--
drop table "MARTIR03"."RESULTS";
--
create table results1I as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
  AD_BASE.UPRN,
   AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_nopc,
  AD_BASE.DESCRIPTION,
 (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) 
 - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))/length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2) as score1
FROM SECOND_A,AD_BASE
 WHERE 
 AD_BASE.H3_10=SECOND_A.H3_10_p 
  AND AD_BASE.ADD_NUM = SECOND_A.ADD_NUM
 AND instr(SECOND_A.ADDRESS_STRING,AD_BASE.DESCRIPTION,1,1)>0
AND UTL_MATCH.JARO_WINKLER(SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2, AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2)>0.85;

UPDATE results1I SET STAGE= '1I'; 

create table results1II as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
  AD_BASE.UPRN,
   AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_nopc,
  AD_BASE.DESCRIPTION,
 (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) 
 - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))
 /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2) as score1
FROM SECOND_A,AD_BASE
 WHERE 
 AD_BASE.H3_10=SECOND_A.H3_10_p 
  AND AD_BASE.ADD_NUM = SECOND_A.ADD_NUM
 AND instr(SECOND_A.ADDRESS_STRING,AD_BASE.DESCRIPTION,1,1)>0
AND UTL_MATCH.JARO_WINKLER(SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2, AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2)>0.85; 

UPDATE results1II SET STAGE= '1II'; 

 CREATE TABLE RESULTS1 AS 
select * from results1I
union 
select * from results1II;
 
 --PICK HIGHEST SCORE ONLY
CREATE TABLE RESULTS1A AS SELECT ID,STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,description, MAX_SCORE FROM(
SELECT ID, STAGE, UPRN,PARENT_UPRN,ADDRESS_STRING,ADDRESS_STRING_NOPC,score1,description,
       MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE
   FROM RESULTS1)
   WHERE SCORE1 = MAX_SCORE and 
       instr(ADDRESS_STRING,description,1,1)>0
 ORDER BY ID, ADDRESS_STRING;
 --
 ALTER TABLE RESULTS1A COMPRESS;
 --
DELETE FROM SECOND_A
WHERE EXISTS( SELECT 1 FROM RESULTS1A Where SECOND_A.id = RESULTS1A.id);
COMMIT;
drop table "MARTIR03"."RESULTS1";
--
create table results2 as SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_7=SECOND_A.H3_7_p 
AND AD_BASE.ADD_NUM IS NULL
AND SECOND_A.ADD_NUM IS NULL
AND LENGTH(SECOND_A.CURRENT_LINE1)>3
AND SOUNDEX(regexp_substr(SECOND_A.CURRENT_LINE1, '[A-Z ]+', 1, 1))=SOUNDEX(regexp_substr(ad_base.ADDRESS_LINE_1, '[A-Z ]+', 1, 1))
AND (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2)>0.88;
  --ADD SOUNDEX
UPDATE results2 SET STAGE= '2'; 
--PICK BEST SCORE ONLY
CREATE TABLE RESULTS2A AS SELECT DISTINCT ID, STAGE,UPRN, PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, DESCRIPTION,MAX_SCORE FROM(
SELECT ID, STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, DESCRIPTION, SCORE1,
       MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE
   FROM RESULTS2)
   WHERE SCORE1 = MAX_SCORE 
   and instr(ADDRESS_STRING,description,1,1)>0
 ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
 
 ALTER TABLE RESULTS2A COMPRESS;
--
DELETE FROM SECOND_A
WHERE EXISTS( SELECT 1 FROM RESULTS2A Where SECOND_A.ID = RESULTS2A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS2";
----UP TO HERE
create table results3 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.POST_TOWN,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.POST_TOWN) as score,
  AD_BASE.ADDRESS_STRING_NOPC
FROM SECOND_A,AD_BASE
 WHERE SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2=AD_BASE.ADDRESS_LINE_1||AD_BASE.POST_TOWN;
 
 UPDATE results3 SET STAGE= '2'; 
----
CREATE TABLE RESULTS3A AS SELECT DISTINCT ID, STAGE,UPRN,ADDRESS_STRING,PARENT_UPRN,ADDRESS_STRING_NOPC,SCORE, MAX_SCORE, COUNT_P_UPRN FROM(
SELECT ID, STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE,
       MAX(SCORE) OVER (PARTITION BY ID) AS MAX_SCORE,
       DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
   FROM RESULTS3)
   WHERE SCORE = MAX_SCORE AND COUNT_P_UPRN=1
 ORDER BY ID, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS3A COMPRESS;
--
DELETE FROM SECOND_A
WHERE EXISTS( SELECT 1 FROM RESULTS3A Where SECOND_A.ID = RESULTS3A.ID);
COMMIT;
--
drop table "MARTIR03"."RESULTS3";
--

--
create table results4 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.CURRENT_LINE1,
SECOND_A.CURRENT_LINE2,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.DESCRIPTION,
  AD_BASE.ADDRESS_LINE_1,
  AD_BASE.ADDRESS_LINE_2,
  AD_BASE.POST_TOWN,
  AD_BASE.ADDRESS_STRING_NOPC,
    (length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2||AD_BASE.POST_TOWN,TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)))
  /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2||AD_BASE.POST_TOWN) as score
FROM SECOND_A,AD_BASE
WHERE SECOND_A.H3_8_P=AD_BASE.H3_8
AND AD_BASE.ADD_NUM = SECOND_A.ADD_NUM
AND (length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING_NOPC)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2||AD_BASE.POST_TOWN,TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)))
  /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2||AD_BASE.POST_TOWN)>0.85
  AND (INSTR(SECOND_A.address_string ,AD_BASE.DESCRIPTION,1,1)>0 OR INSTR(SECOND_A.address_string ,AD_BASE.ABBR_STREET,1,1)>0);

UPDATE results4 SET STAGE= '4'; 
--
CREATE TABLE RESULTS4A AS SELECT DISTINCT ID,STAGE, UPRN, PARENT_UPRN,ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE, MAX_SCORE FROM(
SELECT ID,STAGE,UPRN, PARENT_UPRN,ADDRESS_STRING,  ADDRESS_STRING_NOPC, SCORE,
       MAX(SCORE) OVER (PARTITION BY ID) AS MAX_SCORE
   FROM RESULTS4)
   WHERE SCORE = MAX_SCORE 
 ORDER BY ID, ADDRESS_STRING_NOPC;
 
 ALTER TABLE RESULTS4A COMPRESS;

--
DELETE FROM SECOND_A
WHERE EXISTS( SELECT 1 FROM RESULTS4A Where SECOND_A.ID = RESULTS4A.ID);
COMMIT;
--
drop table "MARTIR03"."RESULTS4";
--
create table results5 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_STRING_NOPC,
TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)))/length(AD_BASE.ADDRESS_STRING_NOPC) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
AND AD_BASE.ADD_NUM = SECOND_A.ADD_NUM 
AND INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.description,1,1)>0;

UPDATE results5 SET STAGE= '5'; 

CREATE TABLE RESULTS5A AS SELECT DISTINCT ID, STAGE, UPRN, PARENT_UPRN,ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID, STAGE, UPRN, PARENT_UPRN,ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,
       MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE
   FROM RESULTS5)
   WHERE SCORE1 = MAX_SCORE
 ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS5A COMPRESS;
-----
DELETE FROM SECOND_A
WHERE EXISTS( SELECT 1 FROM RESULTS5A Where SECOND_A.ID = RESULTS5A.ID);
COMMIT;
--
drop table "MARTIR03"."RESULTS5";

create table results6 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  (length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_STRING_NOPC,TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)))
  /length(AD_BASE.ADDRESS_STRING_NOPC) as score,
  AD_BASE.ADDRESS_STRING_NOPC
  FROM SECOND_A,AD_BASE
 WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
 AND INSTR(SECOND_A.address_string ,AD_BASE.DESCRIPTION,1,1)>0
  AND AD_BASE.ADD_NUM = SECOND_A.ADD_NUM;
  
UPDATE results6 SET STAGE= '6';   
--
CREATE TABLE RESULTS6A AS SELECT DISTINCT ID, STAGE,UPRN, PARENT_UPRN,ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE, MAX_SCORE FROM(
SELECT ID, STAGE, UPRN, PARENT_UPRN,ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE,
       MAX(SCORE) OVER (PARTITION BY ID) AS MAX_SCORE
   FROM RESULTS6)
   WHERE SCORE = MAX_SCORE
 ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS6A COMPRESS;
--
DELETE FROM SECOND_A
WHERE EXISTS( SELECT 1 FROM RESULTS6A Where SECOND_A.ID = RESULTS6A.ID);
COMMIT;
--
drop table "MARTIR03"."RESULTS6";
--
create table results7 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  UTL_MATCH.edit_distance_similarity( AD_BASE.ADDRESS_STRING_NOPC,TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) as score1,
  AD_BASE.ADDRESS_STRING_NOPC
  FROM SECOND_A,AD_BASE
 WHERE SECOND_A.H3_8_P=AD_BASE.H3_8
 AND (INSTR(SECOND_A.CURRENT_LINE1,AD_BASE.ABBR_STREET,1,1)>0 OR INSTR(SECOND_A.CURRENT_LINE1,AD_BASE.DESCRIPTION,1,1)>0)
 AND (AD_BASE.BUILD_NO=second_A.add_num OR AD_BASE.BUILD_NO IS NULL AND AD_BASE.SUB_UNIT = SECOND_A.ADD_NUM);
--
UPDATE results7 SET STAGE= '7'; 

CREATE TABLE RESULTS7A AS SELECT DISTINCT ID, STAGE,UPRN, PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE, UPRN, PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,
       MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
       DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
   FROM RESULTS7)
   WHERE SCORE1 = MAX_SCORE AND COUNT_P_UPRN=1
 ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS7A COMPRESS;
-
DELETE FROM SECOND_A
WHERE EXISTS( SELECT 1 FROM RESULTS7A Where SECOND_A.ID = RESULTS7A.ID);
COMMIT;
--
drop table "MARTIR03"."RESULTS7";
--
create table results8 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  (length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_STRING_NOPC,TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)))/length(AD_BASE.ADDRESS_STRING_NOPC) AS SCORE1,
   AD_BASE.ADDRESS_STRING_NOPC
  FROM SECOND_A,AD_BASE
 WHERE AD_BASE.H3_7=SECOND_A.H3_7_p
 AND LENGTH(TRIM(SECOND_A.CURRENT_LINE1))<3
 and (length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_STRING_NOPC,TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)))/length(AD_BASE.ADDRESS_STRING_NOPC) >0.87
  AND AD_BASE.BUILD_NO=regexp_substr(second_A.add_num, '[^ ]+', 1, 2);

UPDATE results8 SET STAGE= '8'; 
--
CREATE TABLE RESULTS8A AS SELECT DISTINCT ID, STAGE,UPRN, PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE, COUNT_P_UPRN FROM(
SELECT ID, STAGE, UPRN, PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,
      MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
      DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
   FROM RESULTS8)
   WHERE SCORE1 = MAX_SCORE AND COUNT_P_UPRN =1
 ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS8A COMPRESS;
-
DELETE FROM SECOND_A
WHERE EXISTS( SELECT 1 FROM RESULTS8A Where SECOND_A.ID = RESULTS8A.ID);
COMMIT;
--
drop table "MARTIR03"."RESULTS8";
----
create table results9 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  (length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_STRING_NOPC,TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)))/length(AD_BASE.ADDRESS_STRING_NOPC)
  +
  (length(TRIM(LEADING FROM AD_BASE.ADDRESS_STRING_NOPC)) - UTL_MATCH.EDIT_DISTANCE(SECOND_A.ADDRESS_STRING,TRIM(LEADING FROM AD_BASE.ADDRESS_STRING_NOPC)))/length(SECOND_A.ADDRESS_STRING) AS SCORE1,
  AD_BASE.ADDRESS_STRING_NOPC
  FROM SECOND_A,AD_BASE
 WHERE SECOND_A.H3_7_P=AD_BASE.H3_7
  AND INSTR(SECOND_A.ADDRESS_STRING,AD_BASE.DESCRIPTION,1,1)>0
  AND AD_BASE.BUILD_NO=regexp_substr(second_A.add_num, '[^ ]+', 1, 2)
  and (length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_STRING_NOPC,TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)))/length(AD_BASE.ADDRESS_STRING_NOPC) >0.87;
 --
 UPDATE results9 SET STAGE= '9'; 
 
 CREATE TABLE RESULTS9A AS SELECT DISTINCT ID,STAGE, UPRN, PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID, STAGE, UPRN, PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,
      MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE
   FROM RESULTS9)
   WHERE SCORE1 = MAX_SCORE
 ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS9A COMPRESS;
-
DELETE FROM SECOND_A
WHERE EXISTS( SELECT 1 FROM RESULTS9A Where SECOND_A.ID = RESULTS9A.ID);
COMMIT;
--
drop table "MARTIR03"."RESULTS9";
--
create table results10 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM,
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||' '||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_STRING_NOPC,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||' '||SECOND_A.CURRENT_LINE2)))/length(AD_BASE.ADDRESS_STRING_NOPC) AS SCORE1,
  AD_BASE.ADDRESS_STRING_NOPC
  FROM SECOND_A,AD_BASE
WHERE SECOND_A.H3_8_P=AD_BASE.H3_8
AND AD_BASE.BUILD_NO = SECOND_A.ADD_NUM 
and instr(SECOND_A.CURRENT_LINE1||' '||SECOND_A.CURRENT_LINE2,ad_base.description,1,1)>0;
-----------------------
 UPDATE results10 SET STAGE= '10'; 
------------------------
CREATE TABLE RESULTS10A AS SELECT DISTINCT ID, STAGE, UPRN, PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN, PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS10)
WHERE COUNT_P_UPRN=1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
--
 ALTER TABLE RESULTS10A COMPRESS;
 
drop table "MARTIR03"."RESULTS10";
--
DELETE FROM SECOND_A
WHERE EXISTS( SELECT 1 FROM RESULTS10A Where SECOND_A.ID = RESULTS10A.ID);
COMMIT;

-------------------------
create table results11 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  (length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_STRING_NOPC,
  TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)))/length(AD_BASE.ADDRESS_STRING_NOPC) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_6=SECOND_A.H3_6_P
AND AD_BASE.BUILD_NO = SECOND_A.ADD_NUM 
AND INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.DESCRIPTION,1,1)>0;

 UPDATE results11 SET STAGE= '11'; 
--
CREATE TABLE RESULTS11A AS SELECT DISTINCT ID,STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE
FROM RESULTS11)
WHERE SCORE1 = MAX_SCORE 
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS11A COMPRESS;
--
DELETE FROM SECOND_A
WHERE EXISTS( SELECT 1 FROM RESULTS11A Where SECOND_A.ID = RESULTS11A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS11";
----------
------------
create table results12 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  (length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_STRING_NOPC,
  TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)))/length(AD_BASE.ADDRESS_STRING_NOPC) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
AND (AD_BASE.add_num= SECOND_A.ADD_NUM )
AND (INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.DESCRIPTION,1,1)>0 or INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.abbr_street,1,1)>0);
--
 UPDATE results12 SET STAGE= '12'; 

CREATE TABLE RESULTS12A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE
FROM RESULTS12)
WHERE SCORE1 = MAX_SCORE 
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS12A COMPRESS;
--
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS12A Where SECOND_A.ID = RESULTS12A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS12";
---------------
-----------------
create table results13 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_STRING_NOPC,
TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)))/length(AD_BASE.ADDRESS_STRING_NOPC) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
AND(AD_BASE.BUILD_NO = SECOND_A.ADD_NUM )
AND INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.abbr_street,1,1)>0;

 UPDATE results13 SET STAGE= '13'; 

CREATE TABLE RESULTS13A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS13)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS13A 
COMPRESS;
--
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS13A Where SECOND_A.ID = RESULTS13A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS13";
-------------------
-------------------

---------------
-----------------
create table results14 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_STRING_NOPC,
TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)))/length(AD_BASE.ADDRESS_STRING_NOPC) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
AND (AD_BASE.ADD_NUM = SECOND_A.ADD_NUM )
AND INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.abbr_street,1,1)>0;

 UPDATE results14 SET STAGE= '14'; 

CREATE TABLE RESULTS14A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS14)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS14A 
COMPRESS;
--
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS14A Where SECOND_A.ID = RESULTS14A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS14";
---------------------------
-----------------------------
create table results15 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1)) - UTL_MATCH.JARO_WINKLER(AD_BASE.DESCRIPTION,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1)))/length(AD_BASE.DESCRIPTION) AS SCORE1,
(length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE2)) - UTL_MATCH.JARO_WINKLER(AD_BASE.DESCRIPTION,TRIM(LEADING FROM SECOND_A.CURRENT_LINE2)))/length(AD_BASE.DESCRIPTION) AS SCORE2
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_8=SECOND_A.H3_8_P
AND AD_BASE.ADD_NUM = SECOND_A.ADD_NUM 
and UTL_MATCH.JARO_WINKLER(replace (SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2, ' ', ''),replace(ad_base.address_line_1||ad_base.address_line_2, ' ', ''))>0.8
AND (INSTR(SECOND_A.CURRENT_LINE2,AD_BASE.DESCRIPTION, 1, 1)>0 OR INSTR(SECOND_A.CURRENT_LINE2,AD_BASE.ABBR_STREET, 1, 1)>0
OR INSTR(SECOND_A.CURRENT_LINE1,AD_BASE.DESCRIPTION, 1, 1)>0 OR INSTR(SECOND_A.CURRENT_LINE1,AD_BASE.ABBR_STREET, 1, 1)>0);

UPDATE RESULTS15 SET STAGE= '15'; 
---------------------------------
CREATE TABLE RESULTS15A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE
FROM RESULTS15)
WHERE SCORE1 = MAX_SCORE 
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS15A COMPRESS;
-----------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS15A Where SECOND_A.ID = RESULTS15A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS15";
--
create table results16 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.CURRENT_LINE1,
SECOND_A.CURRENT_LINE2,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.ADDRESS_STRING_NOPC,
AD_BASE.ADDRESS_LINE_1,
AD_BASE.ADDRESS_LINE_2,
AD_BASE.POST_TOWN,
AD_BASE.TOWN,
AD_BASE.LOCALITY,
(length(SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.JARO_WINKLER(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)/length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE SECOND_A.H3_7_P =AD_BASE.H3_7
AND AD_BASE.NUM = SECOND_A.ADD_NUM 
AND (INSTR(SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2,AD_BASE.ABBR_STREET, 1, 1)>0 or INSTR(SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2,AD_BASE.description, 1, 1)>0  )
AND INSTR(SECOND_A.ADDRESS_STRING_NOPC, AD_BASE.POST_TOWN, 1, 1)>0
and (length( SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2) - UTL_MATCH.JARO_WINKLER(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2))
/length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2)<0.87;
--AND SOUNDEX(regexp_substr(SECOND_A.CURRENT_LINE2, '[A-Z ]+', 1, 1)) = SOUNDEX(regexp_substr(AD_BASE.DESCRIPTION, '[A-Z ]+', 1, 1));
-------------------
 UPDATE RESULTS16 SET STAGE= '16'; 

CREATE TABLE RESULTS16A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MIN_SCORE FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MIN(SCORE1) OVER (PARTITION BY ID) AS MIN_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS16)
WHERE COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS16A COMPRESS;

DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS16A Where SECOND_A.ID = RESULTS16A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS16";
-------------
-------------
create table results17I as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) - UTL_MATCH.EDIT_DISTANCE(regexp_replace(AD_BASE.ADDRESS_STRING_NOPC,'BLOCK|FLAT|FLOOR FLAT',''),TRIM(LEADING FROM SECOND_A.ADDRESS_STRING))) / LENGTH(regexp_replace(AD_BASE.ADDRESS_STRING_NOPC,'BLOCK|FLAT|FLOOR FLAT','')) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
AND AD_BASE.ADD_NUM = SECOND_A.ADD_NUM
AND( INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.abbr_street,1,1)>0 OR INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.abbr_street,1,1)>0)
--OR  INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.DESCRIPTION,1,1)>0 OR INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.DESCRIPTION,1,1)>0)
and instr(SECOND_A.ADDRESS_STRING,ad_base.post_town,1,1)>0;
 UPDATE RESULTS17I SET STAGE= '17I'; 
create table results17II as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) - UTL_MATCH.EDIT_DISTANCE(regexp_replace(AD_BASE.ADDRESS_STRING_NOPC,'BLOCK|FLAT|FLOOR FLAT',''),TRIM(LEADING FROM SECOND_A.ADDRESS_STRING))) / LENGTH(regexp_replace(AD_BASE.ADDRESS_STRING_NOPC,'BLOCK|FLAT|FLOOR FLAT','')) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
AND AD_BASE.ADD_NUM = SECOND_A.ADD_NUM
AND( INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.DESCRIPTION,1,1)>0 OR INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.DESCRIPTION,1,1)>0)
and instr(SECOND_A.ADDRESS_STRING,ad_base.post_town,1,1)>0;

UPDATE RESULTS17II SET STAGE= '17II'; 
 
CREATE TABLE RESULTS17 AS 
select * from results17I
union 
select * from results17II;

----------------------------
CREATE TABLE RESULTS17A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MIN_SCORE FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MIN(SCORE1) OVER (PARTITION BY ID) AS MIN_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS17)
WHERE COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
------------------------
ALTER TABLE RESULTS17A COMPRESS;
------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS17A Where SECOND_A.ID = RESULTS17A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS17I";
drop table "MARTIR03"."RESULTS17II";
----------------------------
create table results18 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_STRING_NOPC,TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)))/length(AD_BASE.ADDRESS_STRING_NOPC) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_8=SECOND_A.H3_8_P
AND  SECOND_A.ADD_NO_SPACE = REPLACE(AD_BASE.ADDRESS_STRING_NOPC,' ','');
--------------------
UPDATE RESULTS18 SET STAGE= '18'; 
 
CREATE TABLE RESULTS18A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MIN_SCORE FROM(
SELECT ID,STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MIN(SCORE1) OVER (PARTITION BY ID) AS MIN_SCORE,
COUNT(DISTINCT PARENT_UPRN) OVER (PARTITION BY ID) AS COUNT_P_UPRN
FROM RESULTS18)
WHERE COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
--------------------
ALTER TABLE RESULTS18A COMPRESS;
-------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS18A Where SECOND_A.ID = RESULTS18A.ID);
COMMIT;
---------------------
drop table "MARTIR03"."RESULTS18";
-----------------
--------------------
create table results19 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - 
UTL_MATCH.EDIT_DISTANCE(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|FLOOR|RM|ROOM|FLAT','')||AD_BASE.ADDRESS_LINE_2
,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))/
length(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|RM|ROOM|FLOOR|FLAT','')||AD_BASE.ADDRESS_LINE_2) AS SCORE1
FROM SECOND_A,AD_BASE
 WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
AND INSTR(SECOND_A.ADDRESS_STRING ,AD_BASE.abbr_street,1,1)>0
AND INSTR(SECOND_A.ADDRESS_STRING ,AD_BASE.POST_TOWN,1,1)>0
AND SECOND_A.add_num=AD_BASE.add_num;

UPDATE RESULTS19 SET STAGE= '19'; 

CREATE TABLE RESULTS19A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID,STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE
FROM RESULTS19)
WHERE SCORE1 = MAX_SCORE 
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
------------------------
ALTER TABLE RESULTS19A COMPRESS;
---------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS19A Where SECOND_A.ID = RESULTS19A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS19";
-----------------------
create table results20 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|FLOOR|RM|ROOM|FLAT','')||AD_BASE.ADDRESS_LINE_2
  ,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))/length(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|RM|ROOM|FLOOR|FLAT','')||AD_BASE.ADDRESS_LINE_2) AS SCORE1
FROM SECOND_A,AD_BASE
 WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
 AND  INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.DESCRIPTION,1,1)>0
AND SECOND_A.CURRENT_LINE3=AD_BASE.POST_TOWN
AND SECOND_A.add_num=AD_BASE.add_num ;
------------
UPDATE RESULTS20 SET STAGE= '20'; 

CREATE TABLE RESULTS20A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID,STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
COUNT(DISTINCT PARENT_UPRN) OVER (PARTITION BY ID) AS COUNT_P_UPRN
FROM RESULTS20)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
----------------
ALTER TABLE RESULTS20A
COMPRESS;
--------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS20A Where SECOND_A.ID = RESULTS20A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS20";
-------------
----------
create table results21 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.description,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|FLOOR|RM|ROOM|FLAT','')||AD_BASE.ADDRESS_LINE_2
,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))/length(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|RM|ROOM|FLOOR|FLAT','')||AD_BASE.ADDRESS_LINE_2) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_8=SECOND_A.H3_8_P
and AD_BASE.abbr_street is not null
AND  INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.abbr_street,1,1)>0
AND SECOND_A.CURRENT_LINE3=AD_BASE.POST_TOWN
AND SECOND_A.BUILD_NO = AD_BASE.BUILD_NO;

UPDATE RESULTS21 SET STAGE= '21'; 
-----------------------
CREATE TABLE RESULTS21A AS SELECT DISTINCT ID,stage, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID, stage, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
COUNT(DISTINCT PARENT_UPRN) OVER (PARTITION BY ID) AS COUNT_P_UPRN
FROM RESULTS21)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
----------------------
ALTER TABLE RESULTS21A COMPRESS;
----------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS21A Where SECOND_A.ID = RESULTS21A.ID);
COMMIT;
---------------------
drop table "MARTIR03"."RESULTS21";
-----------------
----------------------
create table results22 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.description,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - 
UTL_MATCH.EDIT_DISTANCE(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|FLOOR|RM|ROOM|FLAT','')||AD_BASE.ADDRESS_LINE_2
,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))/
length(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|RM|ROOM|FLOOR|FLAT','')||AD_BASE.ADDRESS_LINE_2) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_8=SECOND_A.H3_8_P
and AD_BASE.abbr_street is not null
AND  INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.abbr_street,1,1)>0
AND SECOND_A.BUILD_NO = AD_BASE.BUILD_NO;
---------------------------------------
UPDATE RESULTS22 SET STAGE= '22'; 

CREATE TABLE RESULTS22A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
COUNT(DISTINCT PARENT_UPRN) OVER (PARTITION BY ID) AS COUNT_P_UPRN
FROM RESULTS22)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
---------------------------------------
ALTER TABLE RESULTS22A COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS22A Where SECOND_A.ID = RESULTS22A.ID);
COMMIT;
---------------------------------------
drop table "MARTIR03"."RESULTS22";
-----------------
create table results23 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.description,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - 
UTL_MATCH.EDIT_DISTANCE(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|FLOOR|RM|ROOM|FLAT','')||AD_BASE.ADDRESS_LINE_2
,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))/
length(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|RM|ROOM|FLOOR|FLAT','')||AD_BASE.ADDRESS_LINE_2) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_8=SECOND_A.H3_8_P
and AD_BASE.abbr_street is not null
AND  INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.abbr_street,1,1)>0
AND SECOND_A.BUILD_NO = AD_BASE.BUILD_NO;
---------------------------------------
UPDATE RESULTS23 SET STAGE= '23';

CREATE TABLE RESULTS23A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID,STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
COUNT(DISTINCT PARENT_UPRN) OVER (PARTITION BY ID) AS COUNT_P_UPRN
FROM RESULTS23)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
---------------------------------------
ALTER TABLE RESULTS23A
COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS23A Where SECOND_A.ID = RESULTS23A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS23";
---------------------------------------
create table results24 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.description,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|FLOOR|RM|ROOM|FLAT','')||AD_BASE.ADDRESS_LINE_2
,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))/length(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|RM|ROOM|FLOOR|FLAT','')||AD_BASE.ADDRESS_LINE_2) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
--and AD_BASE.abbr_street is not null
AND SECOND_A.add_NUM = AD_BASE.sub_unit
AND  (INSTR(SECOND_A.ADDRESS_STRING_NOPC ,AD_BASE.abbr_street,1,1)>0 or INSTR(SECOND_A.ADDRESS_STRING_NOPC ,AD_BASE.description,1,1)>0);

UPDATE RESULTS24 SET STAGE= '24';
--OR SECOND_A.NUM = AD_BASE.ADD_NUM);
---------------------------------------
CREATE TABLE RESULTS24A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID, STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
COUNT(DISTINCT PARENT_UPRN) OVER (PARTITION BY ID) AS COUNT_P_UPRN
FROM RESULTS24)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
---------------------------------------
ALTER TABLE RESULTS24A COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS24A Where SECOND_A.ID = RESULTS24A.ID);
COMMIT;
---------------------------------------
drop table "MARTIR03"."RESULTS24";
---------------------------------------
---------------------------------------
create table results25 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.description,
AD_BASE.ADDRESS_STRING_NOPC,
AD_BASE.BUILD_NO,
AD_BASE.SUB_UNIT,
(length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - 
UTL_MATCH.EDIT_DISTANCE(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|FLOOR|RM|ROOM|FLAT','')||AD_BASE.ADDRESS_LINE_2
,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))/
length(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|RM|ROOM|FLOOR|FLAT','')||AD_BASE.ADDRESS_LINE_2) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
and AD_BASE.DESCRIPTION is not null
AND  (INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.DESCRIPTION,1,1)>0 or INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.abbr_street,1,1)>0 )
AND INSTR(SECOND_A.ADDRESS_STRING_nopc ,AD_BASE.BUILD_NO,1,1)>0
AND INSTR(SECOND_A.ADDRESS_STRING_nopc ,AD_BASE.SUB_UNIT,1,1)>0
and (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - 
UTL_MATCH.EDIT_DISTANCE(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|FLOOR|RM|ROOM|FLAT','')||AD_BASE.ADDRESS_LINE_2
,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))/
length(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|RM|ROOM|FLOOR|FLAT','')||AD_BASE.ADDRESS_LINE_2)>0.75;
UPDATE RESULTS25 SET STAGE= '25';
---------------------------------------
CREATE TABLE RESULTS25A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
COUNT(DISTINCT PARENT_UPRN) OVER (PARTITION BY ID) AS COUNT_P_UPRN
FROM RESULTS25)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
---------------------------------------
ALTER TABLE RESULTS25A COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS25A Where SECOND_A.ID = RESULTS25A.ID);
COMMIT;
---------------------------------------
drop table "MARTIR03"."RESULTS25";
---------------------------------------
---------------------------------------
create table results26 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.description,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - 
UTL_MATCH.EDIT_DISTANCE(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|FLOOR|RM|ROOM|FLAT','')||AD_BASE.ADDRESS_LINE_2
,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))/
length(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|RM|ROOM|FLOOR|FLAT','')||AD_BASE.ADDRESS_LINE_2) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
and AD_BASE.DESCRIPTION is not null
AND  (INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.DESCRIPTION,1,1)>0 or INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.abbr_street,1,1)>0)
AND SECOND_A.BUILD_NO = AD_BASE.BUILD_NO;

UPDATE RESULTS26 SET STAGE= '26';
---------------------------------------
CREATE TABLE RESULTS26A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID, STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
COUNT(DISTINCT PARENT_UPRN) OVER (PARTITION BY ID) AS COUNT_P_UPRN
FROM RESULTS26)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
---------------------------------------
ALTER TABLE RESULTS26A
COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS26A Where SECOND_A.ID = RESULTS26A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS26";
---------------------------------------
---------------------------------------
create table results27 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.description,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|FLOOR|RM|ROOM|FLAT','')||AD_BASE.ADDRESS_LINE_2
,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))/length(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|RM|ROOM|FLOOR|FLAT','')||AD_BASE.ADDRESS_LINE_2) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
and AD_BASE.DESCRIPTION is not null
AND (INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.DESCRIPTION,1,1)>0 or INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.abbr_street,1,1)>0)
AND SECOND_A.BUILD_NO = AD_BASE.BUILD_NO;

UPDATE RESULTS27 SET STAGE= '27';
---------------------------------------
CREATE TABLE RESULTS27A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID,STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
COUNT(DISTINCT PARENT_UPRN) OVER (PARTITION BY ID) AS COUNT_P_UPRN
FROM RESULTS27)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
---------------------------------------
ALTER TABLE RESULTS27A COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS27A Where SECOND_A.ID = RESULTS27A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS27";
---------------------------------------
---------------------------------------
create table results28 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
SECOND_A.BUILD_NO as in_B_NO,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.description,
AD_BASE.BUILD_NO AS B_NO,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - 
UTL_MATCH.EDIT_DISTANCE(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|FLOOR|RM|ROOM|FLAT','')||AD_BASE.ADDRESS_LINE_2
,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))/
length(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|RM|ROOM|FLOOR|FLAT','')||AD_BASE.ADDRESS_LINE_2) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_6=SECOND_A.H3_6_P
and AD_BASE.DESCRIPTION is not null
AND  (INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.DESCRIPTION,1,1)>0 or INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.abbr_street,1,1)>0
OR INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.DESCRIPTION,1,1)>0 or INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.abbr_street,1,1)>0)
AND SECOND_A.BUILD_NO = AD_BASE.BUILD_NO;
---------------------------------------
UPDATE RESULTS28 SET STAGE= '28';

CREATE TABLE RESULTS28A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN,B_NO,IN_B_NO, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID,STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,B_NO,IN_B_NO,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
COUNT(DISTINCT PARENT_UPRN) OVER (PARTITION BY ID) AS COUNT_P_UPRN
FROM RESULTS28)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
AND B_NO=IN_B_NO
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
---------------------------------------
ALTER TABLE RESULTS28A
COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS28A Where SECOND_A.ID = RESULTS28A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS28";
---------------------------------------

---------------------------------------
create table results29 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
SECOND_A.BUILD_NO as in_B_NO,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.description,
AD_BASE.BUILD_NO AS B_NO,
AD_BASE.ADDRESS_STRING_NOPC,
(length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - 
UTL_MATCH.EDIT_DISTANCE(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|FLOOR|RM|ROOM|FLAT','')||AD_BASE.ADDRESS_LINE_2
,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))/
length(regexp_replace(AD_BASE.ADDRESS_LINE_1,'UNIT|BLOCK|BLK|FLAT|FL|RM|ROOM|FLOOR|FLAT','')||AD_BASE.ADDRESS_LINE_2) AS SCORE1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.H3_6=SECOND_A.H3_6_P
and AD_BASE.DESCRIPTION is not null
AND  (INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.DESCRIPTION,1,1)>0 or INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.abbr_street,1,1)>0
OR INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.DESCRIPTION,1,1)>0 or INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.abbr_street,1,1)>0)
AND SECOND_A.BUILD_NO IS NULL
AND SECOND_A.SUB_UNIT = AD_BASE.BUILD_NO;

UPDATE RESULTS29 SET STAGE= '29';
---------------------------------------
CREATE TABLE RESULTS29A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN,B_NO,IN_B_NO, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,B_NO,IN_B_NO,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
COUNT(DISTINCT PARENT_UPRN) OVER (PARTITION BY ID) AS COUNT_P_UPRN
FROM RESULTS29)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
---------------------------------------
ALTER TABLE RESULTS29A
COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS29A Where SECOND_A.ID = RESULTS29A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS29";
----------------------
-----------------------
create table results30 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
  AD_BASE.UPRN,
  PARENT_UPRN,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - 
  UTL_MATCH.JARO_WINKLER(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,
  TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_STRING_NOPC) as score1,
  AD_BASE.ADDRESS_STRING_NOPC
  FROM SECOND_A,AD_BASE
 WHERE AD_BASE.H3_6=SECOND_A.H3_6_P
 AND INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.ABBR_STREET,1,1)>0
 AND INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.TOWN,1,1)>0
  AND AD_BASE.ADD_NUM = SECOND_A.ADD_NUM;
  
  UPDATE RESULTS30 SET STAGE= '30';
-------------
CREATE TABLE RESULTS30A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN,ADDRESS_STRING,ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS30)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS30A COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS30A Where SECOND_A.ID = RESULTS30A.ID);
COMMIT;

drop table "MARTIR03"."RESULTS30";
---------------------------------------
create table results31 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
  AD_BASE.UPRN,
  PARENT_UPRN,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.JARO_WINKLER(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_STRING_NOPC) as score,
  AD_BASE.ADDRESS_STRING_NOPC
  FROM SECOND_A,AD_BASE
 WHERE AD_BASE.H3_6=SECOND_A.H3_6_P
 AND INSTR(SECOND_A.CURRENT_LINE1 ,AD_BASE.ABBR_STREET,1,1)>0
 AND INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.TOWN,1,1)>0
  AND AD_BASE.BUILD_NO = SECOND_A.SUB_UNIT
  AND SECOND_A.BUILD_NO IS NULL;
  
UPDATE RESULTS31 SET STAGE= '31';
-------------
CREATE TABLE RESULTS31A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE, MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE,MAX(SCORE) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS31)
WHERE SCORE = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS31A COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS31A Where SECOND_A.ID = RESULTS31A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS31";
---------------------------------------

create table results32 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
SECOND_A.CURRENT_LINE2,
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_LINE_2,
  (length(TRIM(SECOND_A.SUB_UNIT||' '|| SECOND_A.CURRENT_LINE2)) - SYS.UTL_MATCH.JARO_WINKLER_SIMILARITY(AD_BASE.ADD_NUM|| ' '||AD_BASE.ABBR_STREET,TRIM(SECOND_A.SUB_UNIT||' '|| SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADD_NUM|| ' '||AD_BASE.ABBR_STREET) as score,
  AD_BASE.ADDRESS_STRING_NOPC
  FROM SECOND_A,AD_BASE
 WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
and regexp_replace(regexp_replace(SECOND_A.CURRENT_LINE2,'[A-Z]',''),'[[:space:]]{2,}', '')=AD_BASE.SUB_UNIT 
AND AD_BASE.BUILD_NO IS NULL
--and AD_BASE.ABBR_STREET is not null
--NEEDS WORK ON SCORING AND TO ENSURE LINE 2 IS SIMILAR
 AND INSTR(SECOND_A.CURRENT_LINE2 ,AD_BASE.ABBR_STREET ,1,1)>0;
 --------------------
 UPDATE RESULTS32 SET STAGE= '32';
 --------------------
CREATE TABLE RESULTS32A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE, MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE,MAX(SCORE) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS32)
WHERE SCORE = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS32A
COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS32A Where SECOND_A.ID = RESULTS32A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS32";

---------------------------------------
create table results33 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
SECOND_A.CURRENT_LINE1,
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_LINE_1,
  (length(TRIM(SECOND_A.CURRENT_LINE1)) 
  - SYS.UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADD_NUM|| ' '||AD_BASE.ABBR_STREET,TRIM(SECOND_A.CURRENT_LINE1)))
  /length(AD_BASE.ADD_NUM|| ' '||AD_BASE.ABBR_STREET) as score,
  AD_BASE.ADDRESS_STRING_NOPC
  FROM SECOND_A,AD_BASE
 WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
and regexp_replace(TRIM(regexp_replace(SECOND_A.CURRENT_LINE1,'[A-Z]','')),'[[:space:]]{2,}', '')=AD_BASE.SUB_UNIT
AND AD_BASE.BUILD_NO IS NULL
AND LENGTH(SECOND_A.CURRENT_LINE1)>4
--NEEDS WORK ON SCORING AND TO ENSURE LINE 2 IS SIMILAR
 AND INSTR(SECOND_A.CURRENT_LINE1,AD_BASE.ABBR_STREET ,1,1)>0;
 --------------------
 UPDATE RESULTS33 SET STAGE= '33';
 --------------------
 CREATE TABLE RESULTS33A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE, MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID,STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE,MAX(SCORE) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS33)
WHERE SCORE = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS33A
COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS33A Where SECOND_A.ID = RESULTS33A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS33";
---------------------------------------
create table results34 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
SECOND_A.CURRENT_LINE1,
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_LINE_1,
  (length(TRIM(SECOND_A.CURRENT_LINE1)) 
  - SYS.UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADD_NUM|| ' '||AD_BASE.ABBR_STREET,TRIM(SECOND_A.CURRENT_LINE1)))
  /length(AD_BASE.ADD_NUM|| ' '||AD_BASE.ABBR_STREET) as score,
  AD_BASE.ADDRESS_STRING_NOPC
  FROM SECOND_A,AD_BASE
 WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
and regexp_replace(TRIM(regexp_replace(SECOND_A.CURRENT_LINE1,'[A-Z]','')),'[[:space:]]{2,}', '')=AD_BASE.SUB_UNIT
AND AD_BASE.BUILD_NO IS NULL
AND LENGTH(SECOND_A.CURRENT_LINE1)>4
--NEEDS WORK ON SCORING AND TO ENSURE LINE 2 IS SIMILAR
 AND INSTR(SECOND_A.CURRENT_LINE1,AD_BASE.DESCRIPTION ,1,1)>0 ;
 
--------------------
UPDATE RESULTS34 SET STAGE= '34';
 --------------------
 CREATE TABLE RESULTS34A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE, MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID,STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE,MAX(SCORE) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS34)
WHERE SCORE = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS34A
COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS34A Where SECOND_A.ID = RESULTS34A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS34";
--------------------------
-------------------------
create table results35 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
SECOND_A.CURRENT_LINE1,
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_LINE_1,
  (length(TRIM(SECOND_A.CURRENT_LINE1)) 
  - SYS.UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1|| ' '||AD_BASE.ADDRESS_LINE_2,TRIM(SECOND_A.CURRENT_LINE1)))
  /length(AD_BASE.ADDRESS_LINE_1|| ' '||AD_BASE.ADDRESS_LINE_2) as score,
  AD_BASE.ADDRESS_STRING_NOPC
  FROM SECOND_A,AD_BASE
 WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
and regexp_replace(TRIM(regexp_replace(SECOND_A.CURRENT_LINE1,'[A-Z]','')),'[[:space:]]{2,}', '')=AD_BASE.SUB_UNIT
AND AD_BASE.BUILD_NO IS NULL
--NEEDS WORK ON SCORING AND TO ENSURE LINE 2 IS SIMILAR
 AND (INSTR(SECOND_A.CURRENT_LINE1,AD_BASE.ABBR_STREET ,1,1)>0 OR INSTR(SECOND_A.CURRENT_LINE1,AD_BASE.DESCRIPTION ,1,1)>0);
 ------------------
 UPDATE RESULTS35 SET STAGE= '35';
 -------------------
 CREATE TABLE RESULTS35A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE, MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID,STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE,MAX(SCORE) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS35)
WHERE SCORE = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS35A
COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS35A Where SECOND_A.ID = RESULTS35A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS35";

create table results36 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
SECOND_A.CURRENT_LINE1,
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_LINE_1,
  (length(TRIM(SECOND_A.CURRENT_LINE1)) 
  - SYS.UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1|| ' '||AD_BASE.ADDRESS_LINE_2,TRIM(SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1|| ' '||AD_BASE.ADDRESS_LINE_2) as score,
  AD_BASE.ADDRESS_STRING_NOPC
  FROM SECOND_A,AD_BASE
 WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
and regexp_replace(TRIM(regexp_replace(SECOND_A.CURRENT_LINE2,'[A-Z]','')),'[[:space:]]{2,}', '')=AD_BASE.SUB_UNIT
AND AD_BASE.BUILD_NO IS NULL
--NEEDS WORK ON SCORING AND TO ENSURE LINE 2 IS SIMILAR
 AND (INSTR(SECOND_A.CURRENT_LINE2,AD_BASE.ABBR_STREET ,1,1)>0 OR INSTR(SECOND_A.CURRENT_LINE2,AD_BASE.DESCRIPTION ,1,1)>0) ;

UPDATE RESULTS36 SET STAGE= '36';

 CREATE TABLE RESULTS36A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE, MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID,STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE,MAX(SCORE) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS36)
WHERE SCORE = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS36A
COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS36A Where SECOND_A.ID = RESULTS36A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS36";

create table results37 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
SECOND_A.CURRENT_LINE1,
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_LINE_1,
  (length(TRIM(SECOND_A.CURRENT_LINE1)) 
  - SYS.UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1|| ' '||AD_BASE.ADDRESS_LINE_2,TRIM(SECOND_A.CURRENT_LINE1)))
  /length(AD_BASE.ADDRESS_LINE_1|| ' '||AD_BASE.ADDRESS_LINE_2) as score,
  AD_BASE.ADDRESS_STRING_NOPC
  FROM SECOND_A,AD_BASE
 WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
and regexp_replace(TRIM(regexp_replace(SECOND_A.CURRENT_LINE1,'[A-Z]','')),'[[:space:]]{2,}', '')=AD_BASE.SUB_UNIT
AND AD_BASE.BUILD_NO IS NULL
and length(SECOND_A.CURRENT_LINE1)>4
and length(AD_BASE.ADDRESS_LINE_1)>4
--NEEDS WORK ON SCORING AND TO ENSURE LINE 2 IS SIMILAR
 AND (INSTR(SECOND_A.CURRENT_LINE1,AD_BASE.sub_unit||' '||AD_BASE.ABBR_STREET ,1,1)>0 OR INSTR(SECOND_A.CURRENT_LINE1,AD_BASE.sub_unit|| ' ' ||AD_BASE.DESCRIPTION ,1,1)>0) 
 and  (length(TRIM(SECOND_A.CURRENT_LINE1)) 
  - SYS.UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1|| ' '||AD_BASE.ADDRESS_LINE_2,TRIM(SECOND_A.CURRENT_LINE1)))
  /length(AD_BASE.ADDRESS_LINE_1|| ' '||AD_BASE.ADDRESS_LINE_2)>0.3;

UPDATE RESULTS37 SET STAGE= '37';

CREATE TABLE RESULTS37A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE, MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE,MAX(SCORE) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS37)
WHERE SCORE = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS37A
COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS37A Where SECOND_A.ID = RESULTS37A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS37";

create table results38 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
SECOND_A.CURRENT_LINE1,
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_LINE_1,
  (length(TRIM(SECOND_A.CURRENT_LINE1)) 
  - SYS.UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1|| ' '||AD_BASE.ADDRESS_LINE_2,TRIM(SECOND_A.CURRENT_LINE1||' '||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1|| ' '||AD_BASE.ADDRESS_LINE_2) as score,
  AD_BASE.ADDRESS_STRING_NOPC
  FROM SECOND_A,AD_BASE
 WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
and regexp_replace(TRIM(regexp_replace(SECOND_A.CURRENT_LINE1||' '||SECOND_A.CURRENT_LINE2,'[A-Z]','')),'[[:space:]]{2,}', '')=AD_BASE.ADD_NUM
--NEEDS WORK ON SCORING AND TO ENSURE LINE 2 IS SIMILAR
 --AND (INSTR(SECOND_A.CURRENT_LINE1,AD_BASE.sub_unit||' '||AD_BASE.ABBR_STREET ,1,1)>0 OR INSTR(SECOND_A.CURRENT_LINE1,AD_BASE.sub_unit|| ' ' ||AD_BASE.DESCRIPTION ,1,1)>0) 
 and   (length(TRIM(SECOND_A.CURRENT_LINE1)) 
  - SYS.UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1|| ' '||AD_BASE.ADDRESS_LINE_2,TRIM(SECOND_A.CURRENT_LINE1||' '||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1|| ' '||AD_BASE.ADDRESS_LINE_2)>0.3;

UPDATE RESULTS38 SET STAGE= '38';

CREATE TABLE RESULTS38A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE, MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID,STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE,MAX(SCORE) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS38)
WHERE SCORE = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS38A
COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS38A Where SECOND_A.ID = RESULTS38A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS38";
-------------------------------
------------------------------
create table results39 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING, 
SECOND_A.CURRENT_LINE1,
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_LINE_1,
  (length(TRIM(SECOND_A.ADD_NUM||' '||SECOND_A.CURRENT_LINE2)) 
  - SYS.UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1|| ' '||AD_BASE.ADDRESS_LINE_2,TRIM(SECOND_A.ADD_NUM||' '||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1|| ' '||AD_BASE.ADDRESS_LINE_2) as score,
  AD_BASE.ADDRESS_STRING_NOPC
  FROM SECOND_A,AD_BASE
 WHERE AD_BASE.H3_7=SECOND_A.H3_7_P
AND regexp_replace(SECOND_A.ADD_NUM,'[[:space:]]{2,}', '')=regexp_replace(AD_BASE.ADDRESS_LINE_1,'[[:space:]]{2,}', '')
AND regexp_replace(SECOND_A.CURRENT_LINE2,'[[:space:]]{2,}', '')=regexp_replace(AD_BASE.ADDRESS_LINE_2,'[[:space:]]{2,}', '');
-----------------------
UPDATE RESULTS39 SET STAGE= '39';
-----------------------
CREATE TABLE RESULTS39A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE, MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE,MAX(SCORE) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS39)
WHERE SCORE = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

ALTER TABLE RESULTS39A
COMPRESS;
---------------------------------------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS39A Where SECOND_A.ID = RESULTS39A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS39";

CREATE TABLE RESULTs40 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.NUM as in_num,
ad_base.address_line_1,
ad_base.address_line_2,
second_a.current_line1,
ad_base.ADD_NUM, 
  ad_base.UPRN,
  ad_base.PARENT_UPRN,
  ad_base.ADDRESS_STRING_NOPC,
  (length(TRIM(LEADING FROM SECOND_A.current_line1)) - 
  UTL_MATCH.jaro_winkler(ad_base.ADDRESS_line_1,TRIM(LEADING FROM SECOND_A.current_line1)))
  /length(ad_base.ADDRESS_line_1) as score1,
  (length(TRIM(LEADING FROM SECOND_A.current_line1)) - 
  UTL_MATCH.jaro_winkler(ad_base.ADDRESS_line_2,TRIM(LEADING FROM SECOND_A.current_line2)))
  /length(ad_base.ADDRESS_line_2) as score2
FROM SECOND_A,ad_base
WHERE ad_base.h3_7=SECOND_A.H3_7_p 
and ad_base.add_num is null and second_a.add_num is null
--AND INSTR(AD_BASE.ADD_NUM,SECOND_A.NUM,1,1)>0
AND INSTR(ad_base.ADDRESS_STRING_NOPC,second_a.WORD_ONE||' '||second_a.WORD_TWO,1,1)>0
--OR INSTR(ad_base.ADDRESS_STRING_NOPC,second_a.WORD_TWO||' '||second_a.WORD_THREE,1,1)>0 
--OR INSTR(ad_base.ADDRESS_STRING_NOPC,second_a.WORD_THREE||' '||second_a.WORD_FOUR,1,1)>0
--OR INSTR(ad_base.ADDRESS_STRING_NOPC,second_a.WORD_FOUR||' '||second_a.WORD_FIVE,1,1)>0)
AND (INSTR(SECOND_A.ADDRESS_STRING,ad_base.DESCRIPTION,1,1)>0 or instr(SECOND_A.ADDRESS_STRING,ad_base.ABBR_STREET,1,1)>0);

UPDATE RESULTS40 SET STAGE= '40';

CREATE TABLE RESULTS40A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID,STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS40)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
ALTER TABLE RESULTS40A
COMPRESS;

DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS40A Where SECOND_A.ID = RESULTS40A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS40";
-------------
CREATE TABLE RESULTs41 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.NUM as in_num,
ad_base.address_line_1,
ad_base.address_line_2,
second_a.current_line1,
ad_base.ADD_NUM, 
  ad_base.UPRN,
  ad_base.PARENT_UPRN,
  ad_base.ADDRESS_STRING_NOPC,
  (length(TRIM(LEADING FROM SECOND_A.current_line1)) - 
  UTL_MATCH.jaro_winkler(ad_base.ADDRESS_line_1,TRIM(LEADING FROM SECOND_A.current_line1)))
  /length(ad_base.ADDRESS_line_1) as score1,
  (length(TRIM(LEADING FROM SECOND_A.current_line1)) - 
  UTL_MATCH.jaro_winkler(ad_base.ADDRESS_line_2,TRIM(LEADING FROM SECOND_A.current_line2)))
  /length(ad_base.ADDRESS_line_2) as score2
FROM SECOND_A,ad_base
WHERE ad_base.h3_7=SECOND_A.H3_7_p 
and ad_base.add_num is not null and second_a.add_num is not null
--AND INSTR(AD_BASE.ADD_NUM,SECOND_A.NUM,1,1)>0
AND INSTR(ad_base.ADDRESS_STRING_NOPC,second_a.WORD_ONE||' '||second_a.WORD_TWO,1,1)>0
--OR INSTR(ad_base.ADDRESS_STRING_NOPC,second_a.WORD_TWO||' '||second_a.WORD_THREE,1,1)>0 
--OR INSTR(ad_base.ADDRESS_STRING_NOPC,second_a.WORD_THREE||' '||second_a.WORD_FOUR,1,1)>0
--OR INSTR(ad_base.ADDRESS_STRING_NOPC,second_a.WORD_FOUR||' '||second_a.WORD_FIVE,1,1)>0)
AND (INSTR(SECOND_A.ADDRESS_STRING,ad_base.DESCRIPTION,1,1)>0 or instr(SECOND_A.ADDRESS_STRING,ad_base.ABBR_STREET,1,1)>0);
UPDATE RESULTS41 SET STAGE= '41';

CREATE TABLE RESULTS41A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS41)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
ALTER TABLE RESULTS41A
COMPRESS;

DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS41A Where SECOND_A.ID = RESULTS41A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS41";
-------------------
CREATE TABLE RESULTS42 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.CURRENT_LINE1,
AD_BASE.ADDRESS_LINE_1,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_7=SECOND_A.H3_7_p 
and length(SECOND_A.CURRENT_LINE1)>3
AND (SECOND_A.add_num=AD_BASE.add_num or SECOND_A.add_num is null and AD_BASE.add_num is null)
AND INSTR(AD_BASE.ADDRESS_STRING,SECOND_A.CURRENT_LINE1,1,1)>0 ;

CREATE TABLE RESULTS42_2 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.CURRENT_LINE1,
AD_BASE.ADDRESS_LINE_1,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_7=SECOND_A.H3_7_p 
and length(SECOND_A.CURRENT_LINE1)>3
AND (SECOND_A.add_num=AD_BASE.num or (SECOND_A.add_num is null and AD_BASE.add_num is null))
AND INSTR(AD_BASE.ADDRESS_STRING,SECOND_A.CURRENT_LINE1,1,1)>0 ;

CREATE TABLE RESULTS42_3 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.CURRENT_LINE1,
AD_BASE.ADDRESS_LINE_1,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_6=SECOND_A.H3_6_p 
and length(SECOND_A.CURRENT_LINE1)>3
AND SECOND_A.BUILD_NO IS NULL AND SECOND_A.SUB_UNIT=AD_BASE.num
AND INSTR(AD_BASE.ADDRESS_STRING,SECOND_A.CURRENT_LINE1,1,1)>0 ;
-------------
UPDATE RESULTS42 SET STAGE= '42';
CREATE TABLE RESULTS42A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID,STAGE, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS42)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
ALTER TABLE RESULTS42A
COMPRESS;

----------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS42A Where SECOND_A.ID = RESULTS42A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS42";
------------------------
CREATE TABLE RESULTS43 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.CURRENT_LINE1,
AD_BASE.ADDRESS_LINE_1,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_8=SECOND_A.H3_8_p 
and length(SECOND_A.CURRENT_LINE1)>3
AND replace(AD_BASE.ADDRESS_LINE_1,' ','') =REPLACE(CURRENT_LINE1,' ','') 
AND (SECOND_A.ADD_NUM IS NULL OR (SECOND_A.ADD_NUM = AD_BASE.SUB_UNIT AND AD_BASE.BUILD_NO IS NULL));
-------------
UPDATE RESULTS43 SET STAGE= '43';

CREATE TABLE RESULTS43A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS43)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
ALTER TABLE RESULTS43A
COMPRESS;

----------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS43A Where SECOND_A.ID = RESULTS43A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS43";
--------------
CREATE TABLE RESULTS44 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.CURRENT_LINE1,
AD_BASE.ADDRESS_LINE_1,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_7=SECOND_A.H3_7_p 
and length(SECOND_A.CURRENT_LINE1)>3
AND replace(AD_BASE.ADDRESS_LINE_1,' ','') =REPLACE(CURRENT_LINE2,' ','') 
AND (SECOND_A.ADD_NUM IS NULL OR (SECOND_A.ADD_NUM = AD_BASE.SUB_UNIT AND AD_BASE.BUILD_NO IS NULL) OR SECOND_A.ADD_NUM = AD_BASE.ADD_NUM );
UPDATE RESULTS44 SET STAGE= '44';

CREATE TABLE RESULTS44A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS44)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
ALTER TABLE RESULTS44A
COMPRESS;

----------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS44A Where SECOND_A.ID = RESULTS44A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS44";

CREATE TABLE RESULTS45 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.CURRENT_LINE1,
AD_BASE.ADDRESS_LINE_1,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_6=SECOND_A.H3_6_p 
--and length(SECOND_A.CURRENT_LINE1)>3
AND replace(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_3,' ','') =REPLACE(CURRENT_LINE1||CURRENT_LINE2,' ','') 
AND (SECOND_A.ADD_NUM IS NULL OR (SECOND_A.ADD_NUM = AD_BASE.SUB_UNIT AND AD_BASE.BUILD_NO IS NULL) OR SECOND_A.ADD_NUM = AD_BASE.ADD_NUM );
UPDATE RESULTS45 SET STAGE= '45';
--------------
CREATE TABLE RESULTS45A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS45)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
ALTER TABLE RESULTS45A
COMPRESS;

----------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS45A Where SECOND_A.ID = RESULTS45A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS45";



UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,'C/VAN|CVN|',' CARAVAN ');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,'C/SITE',' CARAVAN SITE');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,'CARAVAN PK|C/PARK',' CARAVAN SITE');

UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' FA$|FHOUSE$| FM$|F/HOUS$| FA$|FAHOUSE$', ' FARMHOUSE');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' COTTS$| COTT$| COT$ ', ' COTTAGE');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' HTL$|HOT$', ' HOTEL');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' HSE$', ' HOUSE');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' COLL$| COL$', ' COLLEGE');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' LDG$', ' LODGE');

UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' EST$', ' ESTATE');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' PK ', ' PARK');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' SCH$', ' SCHOOL');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' BLDGS$', ' BUILDINGS');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' GDN ', ' GARDEN');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' RES$', ' RESIDENCE');

UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' BUNG$', ' BUNGALOW');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' CTRE$', ' CENTRE');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' COMM$', ' COMMUNITY');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' N/HME$', ' NURSING HOME');
UPDATE SECOND_A SET CURRENT_LINE1= regexp_replace(SECOND_A.CURRENT_LINE1,' HO | HME ', ' HOME');

CREATE TABLE RESULTS46 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.CURRENT_LINE1,
AD_BASE.ADDRESS_LINE_1,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_8=SECOND_A.H3_8_p 
and length(SECOND_A.CURRENT_LINE1)>3
AND replace(AD_BASE.ADDRESS_LINE_1,' ','') =REPLACE(CURRENT_LINE1,' ','') 
AND (SECOND_A.ADD_NUM IS NULL OR (SECOND_A.ADD_NUM = AD_BASE.SUB_UNIT AND AD_BASE.BUILD_NO IS NULL));

UPDATE RESULTS46 SET STAGE= '46';
CREATE TABLE RESULTS46A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS46)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
ALTER TABLE RESULTS46A
COMPRESS;

----------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS46A Where SECOND_A.ID = RESULTS46A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS46";

CREATE TABLE RESULTS47 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.CURRENT_LINE1,
AD_BASE.ADDRESS_LINE_1,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_8=SECOND_A.H3_8_p 
and length(SECOND_A.CURRENT_LINE1)>3
AND replace(AD_BASE.ADDRESS_LINE_2,' ','') =REPLACE(CURRENT_LINE1,' ','') 
AND (SECOND_A.ADD_NUM IS NULL OR (SECOND_A.ADD_NUM = AD_BASE.SUB_UNIT AND AD_BASE.BUILD_NO IS NULL));

UPDATE RESULTS47 SET STAGE= '47';

CREATE TABLE RESULTS47A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS47)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
ALTER TABLE RESULTS47A
COMPRESS;

----------
DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS47A Where SECOND_A.ID = RESULTS47A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS47";

--------
CREATE TABLE RESULTS48 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.CURRENT_LINE1,
SECOND_A.ADDRESS_STRING,
AD_BASE.ADDRESS_LINE_1,
SECOND_A.ADD_NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.ADDRESS_STRING_NOPC,
(length(regexp_replace(AD_BASE.ADDRESS_STRING_NOPC,'[[:space:]]|,|[.]', '')) - SYS.UTL_MATCH.JARO_WINKLER(regexp_replace(AD_BASE.ADDRESS_STRING_NOPC,'[[:space:]]|,|[.]', ''),
regexp_replace(SECOND_A.address_string_nopc,'[[:space:]]|,|[.]', '')))  /length(regexp_replace(SECOND_A.address_string_nopc,'[[:space:]]|,|[.]', '')) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_8=SECOND_A.H3_8_p 
 AND ((LENGTH(SECOND_A.WORD_ONE)>3 AND LENGTH(SECOND_A.WORD_ONE)<30 AND INSTR(AD_BASE.ADDRESS_STRING_NOPC,SECOND_A.WORD_ONE,1,1)>0 )
 OR(INSTR(AD_BASE.ADDRESS_STRING_NOPC,SECOND_A.WORD_ONE,1,1)>0 AND INSTR(AD_BASE.ADDRESS_STRING_NOPC,SECOND_A.WORD_TWO,1,1)>0))
and( second_a.add_num=ad_base.add_num or (second_a.add_num is null and ad_base.add_num is null));

CREATE TABLE RESULTS48A AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS48)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;
ALTER TABLE RESULTS48A
COMPRESS;

DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS48A Where SECOND_A.ID = RESULTS48A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS48";
-- add some non number queries




CREATE TABLE RESULTS49 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.CURRENT_LINE1,
AD_BASE.ADDRESS_LINE_1,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.ADDRESS_STRING_NOPC,
(length(regexp_replace(SECOND_A.ADDRESS_STRING_NOPC,'[[:space:]]|,|[.]', '')) - SYS.UTL_MATCH.JARO_WINKLER(regexp_replace(SECOND_A.ADDRESS_STRING_NOPC,'[[:space:]]|,|[.]', ''),
regexp_replace(AD_BASE.address_string_nopc,'[[:space:]]|,|[.]', '')))  /length(regexp_replace(Ad_base.address_string_nopc,'[[:space:]]|,|[.]', '')) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_8=SECOND_A.H3_8_p 
 AND INSTR(AD_BASE.ADDRESS_STRING_NOPC,SECOND_A.WORD_one,1,1)>0 
 AND INSTR(AD_BASE.ADDRESS_STRING_NOPC,SECOND_A.WORD_TWO,1,1)>0
AND AD_BASE.add_num IS NULL AND second_a.add_num IS NULL
AND (INSTR(SECOND_A.ADDRESS_STRING_NOPC,AD_BASE.ABBR_STREET,1,1)>0 
OR INSTR(SECOND_A.ADDRESS_STRING_NOPC,AD_BASE.DESCRIPTION,1,1)>0);

UPDATE RESULTS49 SET STAGE= '49';

CREATE TABLE RESULTS49a AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS49)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1 and score1>0.85
ORDER BY ID,ADDRESS_STRING, ADDRESS_STRING_NOPC;

DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS49A Where SECOND_A.ID = RESULTS49A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS49";

CREATE TABLE RESULTS50 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.CURRENT_LINE1,
AD_BASE.ADDRESS_LINE_1,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.ADDRESS_STRING_NOPC,
(length(SECOND_A.ADDRESS_STRING_NOPC) - 
SYS.UTL_MATCH.JARO_WINKLER(SECOND_A.ADDRESS_STRING_NOPC,AD_BASE.address_string_nopc))  /length(Ad_base.address_string_nopc) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_8=SECOND_A.H3_8_p 
--AND (length(regexp_replace(AD_BASE.ADDRESS_STRING_NOPC,'[[:space:]]|,|.', '')) - SYS.UTL_MATCH.JARO_WINKLER(regexp_replace(AD_BASE.ADDRESS_STRING_NOPC,'[[:space:]]|,|.', ''),
--regexp_replace(SECOND_A.address_string_nopc,'[[:space:]]|,|.', '')))  /length(regexp_replace(SECOND_A.address_string_nopc,'[[:space:]]|,|.', ''))>0.6
 AND ((LENGTH(SECOND_A.WORD_ONE)>3 AND INSTR(AD_BASE.ADDRESS_STRING_NOPC,SECOND_A.WORD_ONE,1,1)>0 )OR(INSTR(AD_BASE.ADDRESS_STRING_NOPC,SECOND_A.WORD_two,1,1)>0 
 AND INSTR(AD_BASE.ADDRESS_STRING_NOPC,SECOND_A.WORD_TWO,1,1)>0)OR(INSTR(SECOND_A.ADDRESS_STRING_NOPC,AD_BASE.WORD_ONE,1,1)>0 ))
and (SECOND_A.add_num=AD_BASE.sub_unit and AD_BASE.build_no is null)
--((INSTR(second_a.SUB_UNIT,AD_BASE.SUB_UNIT,1,1)>0 AND AD_BASE.BUILD_NO IS NULL AND SECOND_A.BUILD_NO IS NULL) 
--OR (INSTR(AD_BASE.add_num,second_a.SUB_UNIT,1,1)>0 AND SECOND_A.BUILD_NO IS NULL AND SECOND_A.BUILD_NO IS NULL)
--AND(CONVERT(second_a.SUB_UNIT,INTEGER)- CONVERT(AD_BASE.SUB_UNIT,INTEGER)=0 AND AD_BASE.BUILD_NO IS NULL AND SECOND_A.BUILD_NO IS NULL

--AND (AD_BASE.add_num IS NULL AND second_a.add_num IS NULL)  
--AND INSTR(second_a.add_num,AD_BASE.add_num,1,1)>0
AND (INSTR(SECOND_A.ADDRESS_STRING_NOPC,AD_BASE.ABBR_STREET,1,1)>0 OR INSTR(SECOND_A.ADDRESS_STRING_NOPC,AD_BASE.DESCRIPTION,1,1)>0);
--AND (INSTR(replace(SECOND_A.ADDRESS_STRING,' ',''),replace(ad_base.DESCRIPTION,' ',''),1,1)>0 or instr(replace(SECOND_A.ADDRESS_STRING,' ',''),replace(ad_base.ABBR_STREET,' ',''),1,1)>0);

UPDATE RESULTS50 SET STAGE= '50';

CREATE TABLE RESULTS50a AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS50)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1 and score1>0.85
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS50A Where SECOND_A.ID = RESULTS50A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS50";

CREATE TABLE RESULTS51 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.CURRENT_LINE1,
AD_BASE.ADDRESS_LINE_1,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.ADDRESS_STRING_NOPC,
(length(regexp_replace(SECOND_A.ADDRESS_STRING_NOPC,'[[:space:]]|,|[.]', '')) - SYS.UTL_MATCH.JARO_WINKLER(regexp_replace(SECOND_A.ADDRESS_STRING_NOPC,'[[:space:]]|,|[.]', ''),
regexp_replace(AD_BASE.address_string_nopc,'[[:space:]]|,|[.]', '')))  /length(regexp_replace(Ad_base.address_string_nopc,'[[:space:]]|,|[.]', '')) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_8=SECOND_A.H3_8_p 
 AND ((LENGTH(SECOND_A.WORD_ONE)>3 AND INSTR(AD_BASE.ADDRESS_STRING_NOPC,SECOND_A.WORD_ONE,1,1)>0 )OR(INSTR(AD_BASE.ADDRESS_STRING_NOPC,SECOND_A.WORD_two,1,1)>0 
 AND INSTR(AD_BASE.ADDRESS_STRING_NOPC,SECOND_A.WORD_TWO,1,1)>0)OR(INSTR(SECOND_A.ADDRESS_STRING_NOPC,AD_BASE.WORD_ONE,1,1)>0 ))
and (regexp_replace(second_a.add_num,'[[:space:]]|,|[.]', '')=regexp_replace(ad_base.add_num,'[[:space:]]|,|[.]', '')
or (regexp_replace(second_a.SUB_UNIT,'[[:space:]]|,|[.]', '')=regexp_replace(AD_BASE.SUB_UNIT,'[[:space:]]|,|[.]', '') AND AD_BASE.BUILD_NO IS NULL AND SECOND_A.BUILD_NO IS NULL)) 
AND (INSTR(SECOND_A.ADDRESS_STRING_NOPC,AD_BASE.ABBR_STREET,1,1)>0 OR INSTR(SECOND_A.ADDRESS_STRING_NOPC,AD_BASE.DESCRIPTION,1,1)>0);

UPDATE RESULTS51 SET STAGE= '51';

CREATE TABLE RESULTS51a AS SELECT DISTINCT ID,STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID, STAGE,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS51)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS51A Where SECOND_A.ID = RESULTS51A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS51";

CREATE TABLE RESULTS52 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.CURRENT_LINE1,
AD_BASE.ADDRESS_LINE_1,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.ADDRESS_STRING_NOPC,
(length(regexp_replace(AD_BASE.ADDRESS_STRING_NOPC,'[[:space:]]|,|[.]', '')) - SYS.UTL_MATCH.JARO_WINKLER(regexp_replace(AD_BASE.ADDRESS_STRING_NOPC,'[[:space:]]|,|[.]', ''),
regexp_replace(SECOND_A.address_string_nopc,'[[:space:]]|,|[.]', '')))  /length(regexp_replace(SECOND_A.address_string_nopc,'[[:space:]]|,|[.]', '')) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_6=SECOND_A.H3_6_p 
 AND ((LENGTH(SECOND_A.WORD_ONE)>3 AND INSTR(second_a.ADDRESS_STRING_NOPC,ad_base.WORD_ONE,1,1)>0 )and(INSTR(second_a.ADDRESS_STRING_NOPC,ad_base.WORD_two,1,1)>0 ))
and( second_a.add_num=ad_base.add_num or (second_a.add_num is null and ad_base.add_num is null) or regexp_replace(AD_BASE.ADD_num,'[[:space:]]|,|[.]', '')=regexp_replace(second_a.ADD_num,'[[:space:]]|,|[.]', ''))
AND (INSTR(replace(SECOND_A.ADDRESS_STRING,' ',''),replace(ad_base.DESCRIPTION,' ',''),1,1)>0 or INSTR(replace(SECOND_A.ADDRESS_STRING,' ',''),replace(ad_base.abbr_street,' ',''),1,1)>0);

UPDATE RESULTS52 SET STAGE= '52';

CREATE TABLE RESULTS52a AS SELECT DISTINCT ID,stage,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID,stage, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS52)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1 
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS52A Where SECOND_A.ID = RESULTS52A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS52";

ALTER TABLE SECOND_A
ADD range_lower varchar(250);
ALTER TABLE SECOND_A
ADD range_upper varchar(250);

UPDATE SECOND_A SET range_LOWER =CAST(regexp_replace(regexp_substr(second_a.ADD_num, '[^/]+[0-9]', 1, 1), '[^0-9]','')AS INT);
UPDATE SECOND_A SET range_upper =CAST(regexp_replace(regexp_substr(second_a.ADD_num, '[^/]+[0-9]', 1, 2), '[^0-9]','')AS INT);


CREATE TABLE RESULTS53 AS SELECT 
SECOND_A.ID,
SECOND_A.ADDRESS_STRING,
SECOND_A.STAGE,
SECOND_A.NUM as in_num,
SECOND_A.RANGE_LOWER,
SECOND_A.RANGE_UPPER,
ad_base.address_line_1,
ad_base.address_line_2,
second_a.current_line1,
second_a.current_line2,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  (length(TRIM(LEADING FROM SECOND_A.Current_line1)) - 
  UTL_MATCH.jaro_winkler(AD_BASE.ADDRESS_line_1,TRIM(LEADING FROM SECOND_A.Current_line1)))
  /length(AD_BASE.ADDRESS_line_1) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_6=SECOND_A.H3_6_p 
and((second_a.sub_unit is not null and second_a.build_no is null) and (AD_BASE.NUM = SECOND_A.SUB_UNIT))
AND (INSTR(SECOND_A.ADDRESS_STRING_nopc,AD_BASE.description,1,1)>0 
or instr(SECOND_A.ADDRESS_STRING_nopc,AD_BASE.ABBR_STREET ,1,1)>0)
and instr(SECOND_A.ADDRESS_STRING_nopc,AD_BASE.post_town ,1,1)>0;

UPDATE RESULTS53 SET STAGE= '53';

CREATE TABLE RESULTS53a AS SELECT DISTINCT ID,stage,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID,stage, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS53)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1 and score1>0.7
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS53A Where SECOND_A.ID = RESULTS53A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS53";

CREATE TABLE RESULTS54 AS SELECT 
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.CURRENT_LINE1,
AD_BASE.ADDRESS_LINE_1,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
AD_BASE.UPRN,
AD_BASE.PARENT_UPRN,
AD_BASE.ADDRESS_STRING_NOPC,
(length(regexp_replace(AD_BASE.ADDRESS_STRING_NOPC,'[[:space:]]|,|[.]', '')) - SYS.UTL_MATCH.JARO_WINKLER(regexp_replace(AD_BASE.ADDRESS_STRING_NOPC,'[[:space:]]|,|[.]', ''),
regexp_replace(SECOND_A.address_string_nopc,'[[:space:]]|,|[.]', '')))  /length(regexp_replace(SECOND_A.address_string_nopc,'[[:space:]]|,|[.]', '')) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_7=SECOND_A.H3_7_p 
--AND (length(regexp_replace(AD_BASE.ADDRESS_STRING_NOPC,'[[:space:]]|,|.', '')) - SYS.UTL_MATCH.JARO_WINKLER(regexp_replace(AD_BASE.ADDRESS_STRING_NOPC,'[[:space:]]|,|.', ''),
--regexp_replace(SECOND_A.address_string_nopc,'[[:space:]]|,|.', '')))  /length(regexp_replace(SECOND_A.address_string_nopc,'[[:space:]]|,|.', ''))>0.6
 AND ((LENGTH(SECOND_A.WORD_ONE)>3 AND INSTR(second_a.ADDRESS_STRING_NOPC,ad_base.WORD_ONE,1,1)>0 )and(INSTR(second_a.ADDRESS_STRING_NOPC,ad_base.WORD_two,1,1)>0 ))
and( second_a.add_num=ad_base.add_num or (second_a.add_num is null and ad_base.add_num is null) or regexp_replace(AD_BASE.ADD_num,'[[:space:]]|,|[.]', '')=regexp_replace(second_a.ADD_num,'[[:space:]]|,|[.]', ''
)
or ((second_a.sub_unit is not null and second_a.build_no is null) and (AD_BASE.NUM = SECOND_A.SUB_UNIT)))
AND (INSTR(replace(SECOND_A.ADDRESS_STRING,' ',''),replace(ad_base.DESCRIPTION,' ',''),1,1)>0 or INSTR(replace(SECOND_A.ADDRESS_STRING,' ',''),replace(ad_base.abbr_street,' ',''),1,1)>0);
------
UPDATE RESULTS54 SET STAGE= '54';

CREATE TABLE RESULTS54a AS SELECT DISTINCT ID,stage,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID,stage, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTS54)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1 and score1>0.65
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS54A Where SECOND_A.ID = RESULTS54A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS54";
------
CREATE TABLE RESULTS55 AS SELECT 
SECOND_A.ID,
SECOND_A.ADDRESS_STRING,
SECOND_A.STAGE,
SECOND_A.NUM as in_num,
ad_base.description,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC ,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2)))
  /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2) as score1
FROM SECOND_A,AD_BASE
WHERE AD_BASE.h3_8=SECOND_A.H3_8_p 
--AND INSTR(AD_BASE.ADD_NUM,SECOND_A.NUM,1,1)>0
AND ((REGEXP_INSTR(SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2,'HOUSE',1,1)>0 AND REGEXP_INSTR(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,'HOUSE',1,1)>0 )
OR(REGEXP_INSTR(SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2,'HOME',1,1)>0 AND REGEXP_INSTR(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,'HOME',1,1)>0 )
OR(REGEXP_INSTR(SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2,'N /HO| C HME| NRS HME|R H|REST HOME|R/HOME|OPH| CARE UNIT| CARE CENTRE |C/ CENTRE | CARE HOME| C H| CH|CARE H|C/HOME|C/HOME|C HOME|CARE',1,1)>0 
AND REGEXP_INSTR(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,'RESIDENTIAL|CARE HOME|NURSING HOME',1,1)>0 )
OR(REGEXP_INSTR(SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2,'CENTRE',1,1)>0 AND REGEXP_INSTR(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,'CENTRE|CARE| RESIDENTIAL',1,1)>0 )
OR(REGEXP_INSTR(SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2,'UNIT',1,1)>0 AND REGEXP_INSTR(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,'UNIT',1,1)>0 )
OR(REGEXP_INSTR(SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2,'N/ HOME|N /HO|C HME| NRS HME| R H|REST HOME|RESIDENTIAL |RES HOME|R/HOME|R H',1,1)>0 
AND REGEXP_INSTR(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,'RESIDENTIAL|CARE HOME|NURSING HOME',1,1)>0 )
OR(REGEXP_INSTR(SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2,'OPH |NURSING|NURSING H|NURSING/H|NURS H | N/H|N H|NURSING HOME|NURSING HO|NURSING HO | N HOME|N/HOME',1,1)>0 
AND REGEXP_INSTR(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,'RESIDENTIAL|CARE HOME|NURSING HOME',1,1)>0 )
OR REGEXP_INSTR(SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2,SECOND_A.WORD_ONE||' '||SECOND_A.WORD_TWO )>0)

AND (INSTR(SECOND_A.ADDRESS_STRING_NOPC,AD_BASE.DESCRIPTION,1,1)>0 or instr(SECOND_A.ADDRESS_STRING_NOPC,AD_BASE.ABBR_STREET ,1,1)>0)
AND INSTR(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2,regexp_replace( SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2,'(((\w+)\s){1}).*','\1'),1,1)>0
AND AD_BASE.CLASSIFICATION_TERTIARY= 'Care / Nursing Home' ;

UPDATE RESULTS55 SET STAGE= '55';

CREATE TABLE RESULTS55a AS SELECT DISTINCT ID,stage,UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1,MAX_SCORE,COUNT_P_UPRN FROM(
SELECT ID,stage, UPRN,PARENT_UPRN, ADDRESS_STRING, ADDRESS_STRING_NOPC, SCORE1,mAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE,
DENSE_RANK() OVER(PARTITION BY ID ORDER BY PARENT_UPRN) AS COUNT_P_UPRN
FROM RESULTs55)
WHERE SCORE1 = MAX_SCORE 
AND COUNT_P_UPRN =1 
ORDER BY ID, ADDRESS_STRING, ADDRESS_STRING_NOPC;

DELETE FROM SECOND_A
WHERE EXISTS( SELECT id FROM RESULTS55A Where SECOND_A.ID = RESULTS55A.ID);
COMMIT;
drop table "MARTIR03"."RESULTS55";

create table results57 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  (length(TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2||SECOND_A.CURRENT_LINE3)) - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2||AD_BASE.ADDRESS_LINE_3,
  TRIM(LEADING FROM SECOND_A.CURRENT_LINE1||SECOND_A.CURRENT_LINE2||SECOND_A.CURRENT_LINE3)))
  /length(AD_BASE.ADDRESS_LINE_1) as score,
  AD_BASE.ADDRESS_STRING_NOPC
FROM SECOND_A,AD_BASE
 WHERE SECOND_A.CURRENT_LINE1=AD_BASE.ADDRESS_string_nopc; 
 create table results_neigh1 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  AD_BASE.LOCALITY,
  ad_base.post_town,
  (length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) 
 - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2||AD_BASE.ADDRESS_LINE_3||AD_BASE.POST_TOWN,TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)))
 /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2||AD_BASE.ADDRESS_LINE_3||AD_BASE.POST_TOWN) as score1
FROM SECOND_A,AD_BASE
 WHERE 
  INSTR(SECOND_A.NEIGHBOURS,ad_base.h3_4,1,1)>0
 and ad_base.Add_num=second_a.add_num
AND( INSTR(SECOND_A.address_string ,AD_BASE.post_town,1,1)>0 OR INSTR(SECOND_A.address_string ,AD_BASE.LOCALITY,1,1)>0)
AND (instr(SECOND_A.ADDRESS_STRING,AD_BASE.DESCRIPTION,1,1)>0 OR instr(SECOND_A.ADDRESS_STRING,AD_BASE.ABBR_STREET,1,1)>0);

create table results_neigh2 as SELECT DISTINCT
SECOND_A.ID,
SECOND_A.STAGE,
SECOND_A.ADDRESS_STRING,
SECOND_A.ADD_NUM as in_num,
AD_BASE.ADD_NUM, 
  AD_BASE.UPRN,
  AD_BASE.PARENT_UPRN,
  AD_BASE.ADDRESS_STRING_NOPC,
  AD_BASE.LOCALITY,
  ad_base.post_town,
  (length(TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)) 
 - UTL_MATCH.EDIT_DISTANCE(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2||AD_BASE.ADDRESS_LINE_3||AD_BASE.POST_TOWN,TRIM(LEADING FROM SECOND_A.ADDRESS_STRING)))
 /length(AD_BASE.ADDRESS_LINE_1||AD_BASE.ADDRESS_LINE_2||AD_BASE.ADDRESS_LINE_3||AD_BASE.POST_TOWN) as score1
FROM SECOND_A,AD_BASE
 WHERE 
  INSTR(SECOND_A.NEAR_NEIGHBOURS,ad_base.h3_4,1,1)>0
 and ad_base.Add_num=second_a.add_num
AND( INSTR(SECOND_A.address_string ,AD_BASE.post_town,1,1)>0 OR INSTR(SECOND_A.address_string ,AD_BASE.LOCALITY,1,1)>0)
AND (instr(SECOND_A.ADDRESS_STRING,AD_BASE.DESCRIPTION,1,1)>0 OR instr(SECOND_A.ADDRESS_STRING,AD_BASE.ABBR_STREET,1,1)>0);
 
 CREATE TABLE TEST AS 
select * from RESULTS_neigh1
union 
select * from RESULTS_neigh2;
UPDATE TEST SET STAGE= '3.1';  

CREATE TABLE RESULTS3AA AS SELECT DISTINCT ID,STAGE, UPRN, PARENT_UPRN,ADDRESS_STRING, ADDRESS_STRING_NOPC,SCORE1, MAX_SCORE FROM(
SELECT ID,STAGE,UPRN, PARENT_UPRN,ADDRESS_STRING,  ADDRESS_STRING_NOPC, SCORE1,
       MAX(SCORE1) OVER (PARTITION BY ID) AS MAX_SCORE
   FROM TEST)
   WHERE SCORE1 = MAX_SCORE and score1>0.75
 ORDER BY ID, ADDRESS_STRING_NOPC;
 
 ALTER TABLE RESULTS3AA COMPRESS;
 
DELETE FROM SECOND_A
WHERE EXISTS( SELECT 1 FROM RESULTS3AA Where SECOND_A.ID = RESULTS3AA.ID);
COMMIT;
 --and instr(second_a.current_line3,ad_base.post_town,1,1)>0;
 
-- olde method floor/apartment - new 0-1500
-- stumped you just have ot know this sort of thing.

--addresses expressed as a range 117-120 new street but incoming == 118 new street
--possiblyt use coordinates to aggregate a match

--swamped by too much sub unit noise on incomgin for addressbase reference 
---match from right hand side possibly

--TOWER BLOCK / name NUMBERING CHANGES
--140 CHARLES STREET = LOMOND HOUSE
--150 CHARLES STREET = NEVIS HOUSE
--160 CHARLES STREET = CAMPSIE HOUSE
---------------------------------------
         --aggregate results--
---------------------------------------
--CREATE MATERIALIZED VIEW seeded_result
--BUILD IMMEDIATE
--REFRESH FORCE
CREATE TABLE UPRNSEEDING_HISTCHI
AS
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from resultsa
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results1a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results2a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results3a
union
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results3aa
union
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results4a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results5a 
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results6a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results7a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results8a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results9a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from resultS10a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results11a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from resultS12a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from resultS13a
union
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results14a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results15a
union 
select ID,STAGE,UPRN, parent_uprn , ADDRESS_STRING, ADDRESS_STRING_NOPC from results16a
union  
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results17a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results18a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results19a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results20a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results21a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results22a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results23a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results24a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results25a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results26a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results27a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results28a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results29a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results30a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results31a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results32a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results33a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results34a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results35a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results36a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results37a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results38a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results39a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results40a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results41a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results42a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results43a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results44a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results45a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results46a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results47a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results48a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results49a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results50a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results51a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results52a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results53a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results54a
union 
select ID,STAGE,UPRN, parent_uprn, ADDRESS_STRING, ADDRESS_STRING_NOPC from results55a
order by STAGE,parent_uprn,uprn;

ALTER TABLE UPRNSEEDING_HISTCHI
COMPRESS;


---reset--

drop table "MARTIR03"."RESULTS10A";
drop table "MARTIR03"."RESULTS10B";
drop table "MARTIR03"."RESULTS11A";
drop table "MARTIR03"."RESULTS12A";
drop table "MARTIR03"."RESULTS13A";
drop table "MARTIR03"."RESULTS14A";
drop table "MARTIR03"."RESULTS15A";
drop table "MARTIR03"."RESULTS16A";
drop table "MARTIR03"."RESULTS17";
drop table "MARTIR03"."RESULTS17A";
drop table "MARTIR03"."RESULTS18A";
drop table "MARTIR03"."RESULTS19A";
drop table "MARTIR03"."RESULTS1A";
drop table "MARTIR03"."RESULTS20A";
drop table "MARTIR03"."RESULTS21A";
drop table "MARTIR03"."RESULTS22A";
drop table "MARTIR03"."RESULTS23A";
drop table "MARTIR03"."RESULTS24A";
drop table "MARTIR03"."RESULTS25A";
drop table "MARTIR03"."RESULTS26A";
drop table "MARTIR03"."RESULTS27A";
drop table "MARTIR03"."RESULTS28A";
drop table "MARTIR03"."RESULTS29A";
drop table "MARTIR03"."RESULTS2A";
drop table "MARTIR03"."RESULTS30A";
drop table "MARTIR03"."RESULTS31A";
drop table "MARTIR03"."RESULTS32";
drop table "MARTIR03"."RESULTS32A";
drop table "MARTIR03"."RESULTS33";
drop table "MARTIR03"."RESULTS33A";
drop table "MARTIR03"."RESULTS34A";
drop table "MARTIR03"."RESULTS35A";
drop table "MARTIR03"."RESULTS36A";
drop table "MARTIR03"."RESULTS37A";
drop table "MARTIR03"."RESULTS38A";
drop table "MARTIR03"."RESULTS39A";
drop table "MARTIR03"."RESULTS40A";
drop table "MARTIR03"."RESULTS41A";
drop table "MARTIR03"."RESULTS42A";
drop table "MARTIR03"."RESULTS43";
drop table "MARTIR03"."RESULTS43A";
drop table "MARTIR03"."RESULTS44A";
drop table "MARTIR03"."RESULTS45A";
drop table "MARTIR03"."RESULTS46A";
drop table "MARTIR03"."RESULTS47A";
drop table "MARTIR03"."RESULTS48A";
drop table "MARTIR03"."RESULTS49A";
drop table "MARTIR03"."RESULTS50A";
drop table "MARTIR03"."RESULTS51A";
drop table "MARTIR03"."RESULTS52A";
drop table "MARTIR03"."RESULTS53A";
drop table "MARTIR03"."RESULTS54A";
drop table "MARTIR03"."RESULTS55A";
drop table "MARTIR03"."RESULTS56A";
drop table "MARTIR03"."RESULTS3A";
drop table "MARTIR03"."RESULTS3AA";
drop table "MARTIR03"."RESULTS4A";
drop table "MARTIR03"."RESULTS5A";
drop table "MARTIR03"."RESULTS6A";
drop table "MARTIR03"."RESULTS7A";
drop table "MARTIR03"."RESULTS8A";
drop table "MARTIR03"."RESULTS9A";
drop table "MARTIR03"."RESULTSA";
drop table "MARTIR03"."RESULTS1I";
drop table "MARTIR03"."RESULTS1II";
drop table "MARTIR03"."RESULTS41";
drop table "MARTIR03"."SECOND_A";


